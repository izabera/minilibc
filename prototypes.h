__attribute__((constructor)) void my_setup();
__attribute__((destructor)) void my_cleanup();
char *my_fgets(char *s, int size, file *f);
char *my_mktemp(char *template);
char *my_stpcpy(char *dest, const char *src);
char *my_stpncpy(char *dest, const char *src, size_t n);
char *my_strcasestr(const char *h, const char *n);
char *my_strcat(char *dest, const char *src);
char *my_strchr(const char *str, int c);
char *my_strchrnul(const char *str, int c);
char *my_strcpy(char *dest, const char *src);
char *my_strdup(const char *s);
char *my_strfry(char *s);
char *my_strncat(char *dest, const char *src, size_t n);
char *my_strncpy(char *dest, const char *src, size_t n);
char *my_strndup(const char *s, size_t n);
char *my_strpbrk(const char *s, const char *accept);
char *my_strrchr(const char *str, int c);
char *my_strstr(const char *h, const char *n);
char *my_tempnam(const char *dir, const char *pfx);
char *my_tmpnam(char *s);
file *my_fdopen(int fd, const char *mode);
file *my_fopen(const char *path, const char *mode);
file *my_freopen(const char *path, const char *mode, file *f);
file *my_open_memstream(char **ptr, size_t *size);
file *my_tmpfile(void);
int my_fclose(file *f);
int my_feof(file *f);
int my_ferror(file *f);
int my_fflush(file *f);
int my_fgetc(file *f);
int my_fileno(file *f);
int my_fpurge(file *f);
int my_fputc(int c, file *f);
int my_fputs(const char *s, file *f);
int my_fseek(file *f, long offset, int whence);
int my_getchar(void);
int my_isalnum(int c);
int my_isalpha(int c);
int my_isascii(int c);
int my_isblank(int c);
int my_iscntrl(int c);
int my_isdigit(int c);
int my_isgraph(int c);
int my_islower(int c);
int my_isprint(int c);
int my_ispunct(int c);
int my_isspace(int c);
int my_isupper(int c);
int my_isxdigit(int c);
int my_memcmp(const void *s1, const void *s2, size_t n);
int my_mkostemp(char *template, int flags);
int my_mkostemps(char *template, int len, int flags);
int my_mkstemp(char *template);
int my_mkstemps(char *template, int len);
int my_putchar(int c);
int my_puts(const char *s);
int my_remove(const char *pathname);
int my_setvbuf(file *f, char *buf, int mode, size_t size);
int my_strcasecmp(const char *s1, const char *s2);
int my_strcmp(const char *s1, const char *s2);
int my_strncasecmp(const char *s1, const char *s2, size_t n);
int my_strncmp(const char *s1, const char *s2, size_t n);
int my_toascii(int c);
int my_tolower(int c);
int my_toupper(int c);
int my_ungetc(int c, file *f);
long int my_strtol(const char *s, char **end, int base);
long long int my_strtoll(const char *s, char **end, int base);
long my_ftell(file *f);
size_t my_fread(void *ptr, size_t size, size_t nmemb, file *f);
size_t my_fwrite(void *ptr, size_t size, size_t nmemb, file *f);
size_t my_strcspn(const char *s, const char *accept);
size_t my_strlen(const char *str);
size_t my_strnlen(const char *s, size_t n);
size_t my_strspn(const char *s, const char *accept);
uint32_t pcg32_random_r(pcg32_random_t* rng);
void my_clearerr(file *f);
void *my_memccpy(void *dest, const void *src, int c, size_t n);
void *my_memchr(const void *s, int c, size_t n);
void *my_memcpy(void *dest, const void *src, size_t n);
void *my_memfrob(void *s, size_t n);
void *my_memmove(void *dest, const void *src, size_t n);
void *my_memrchr(const void *s, int c, size_t n);
void *my_memset(void *s, int c, size_t n);
void *my_rawmemchr(const void *s, int c);
void my_rewind(file *f);
void my_setbuffer(file *f, char *buf, size_t size);
void my_setbuf(file *f, char *buf);
void my_setlinebuf(file *f);
